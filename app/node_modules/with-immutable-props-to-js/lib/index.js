"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _react = _interopRequireDefault(require("react"));

var _immutable = require("immutable");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var getDisplayName = function getDisplayName(Component) {
  return Component.displayName || Component.name || 'Component';
};

var withImmutablePropsToJS = function withImmutablePropsToJS(WrappedComponent) {
  var Wrapper = function Wrapper(props) {
    var propsJS = Object.entries(props).reduce(function (newProps, _ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          propKey = _ref2[0],
          propValue = _ref2[1];

      var canConvertToJS = _immutable.Iterable.isIterable(propValue) && typeof propValue.toJS === 'function';
      newProps[propKey] = canConvertToJS ? propValue.toJS() : propValue;
      return newProps;
    }, {});
    return _react.default.createElement(WrappedComponent, propsJS);
  };

  Wrapper.displayName = "withImmutablePropsToJS(".concat(getDisplayName(WrappedComponent), ")");
  return (0, _hoistNonReactStatics.default)(Wrapper, WrappedComponent);
};

var _default = withImmutablePropsToJS;
exports.default = _default;